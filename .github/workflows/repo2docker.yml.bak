name: repo2docker
on:
  #schedule:
  #  - cron: '25 20 * * *'
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  binder:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@master
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    #Login against a Docker registry except on PR
    #https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@master # v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }} #${{ secrets.GHCR_PAT }}
        
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@master # v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: update jupyter dependencies with repo2docker
      uses: jupyterhub/repo2docker-action@master
      with:
        NO_PUSH: false #true
        DOCKER_REGISTRY: "ghcr.io"
        #IMAGE_NAME: ${{ github.repository }}
        DOCKER_USERNAME: ${{ github.actor }}
        DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        # BINDER_CACHE: true
        # MYBINDERORG_TAG: ${{ github.event.ref }}
        # PUBLIC_REGISTRY_CHECK: true

    # - name: manually run repo2docker and push
    #   run: |
    #     pip install repo2docker
    #     repo2docker --no-run --push .
      

    # - name: Install Cosign
    #   uses: sigstore/cosign-installer@v3.5.0
    # - name: Check install!
    #   run: cosign version

    # # Sign the resulting Docker image digest except on PRs.
    # # This will only write to the public Rekor transparency log when the Docker
    # # repository is public to avoid leaking data.  If you would like to publish
    # # transparency data even for private images, pass --force to cosign below.
    # # https://github.com/sigstore/cosign
    # - name: Sign the published Docker image
    #   if: ${{ github.event_name != 'pull_request' }}
    #   env:
    #     # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
    #     TAGS: ${{ steps.meta.outputs.tags }}
    #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
    #   # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      # run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
